#!/bin/bash

set -x

#fonts
TTF_FONTS_FOLDER=~/.local/share/fonts/ttf/
mkdir -p $TTF_FONTS_FOLDER
ls $TTF_FONTS_FOLDER/vscode.ttf || curl -L -o $TTF_FONTS_FOLDER/vscode.ttf https://github.com/Canop/broot/raw/master/resources/icons/vscode/vscode.ttf

# tools
BIN_FOLDER=~/.local/bin
mkdir -p $BIN_FOLDER 

# pip packages
pip install \
  # Markdown preview
  grip \ 
  autorandr

## ydiff
which ydiff || curl -ksSL https://raw.github.com/ymattw/ydiff/master/ydiff.py > $BIN_FOLDER/ydiff
chmod +x $BIN_FOLDER/ydiff

# shell prompt
curl https://starship.rs/install.sh -sSf | sh -s -- -y

# dep packages
SUDO=""
if type sudo
then
    SUDO="sudo"
fi

# rescuetime
{{ if (eq .chezmoi.os "linux") }}
curl -o /tmp/rescuetime_current_amd64.deb https://www.rescuetime.com/installers/rescuetime_current_amd64.deb
$SUDO dpkg -i /tmp/rescuetime_current_amd64.deb || sudo apt --fix-broken install -y || echo "Installing rescuetime failed"
{{ end }}


# k8s
KUBECTL_PATH=~/.local/bin/kubectl
kubectl || curl  -o $KUBECTL_PATH -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/{{ .chezmoi.os }}/{{ .chezmoi.arch }}/kubectl"
chmod +x $KUBECTL_PATH


git clone --depth 1 https://github.com/scmbreeze/scm_breeze.git ~/.scm_breeze
~/.scm_breeze/install.sh


{{ if (eq .chezmoi.os "darwin") }}
# Mac specific things. 
# In order to make the installation OS agnostic, only things that can't be installed using other installers should be installed using brew.
brew bundle
{{ end }}

gron --version || go install github.com/tomnomnom/gron@latest


# Installing wkhtmltopdf (needed by jsonresume)
ldconfig -p | grep wkhtmltox
code=$?

if [ "$code" != "0" ]
then
	curl -L -o /tmp/wkhtmltox.deb https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.$(lsb_release -cs)_amd64.deb
	sudo apt install /tmp/wkhtmltox.deb
fi;	 


# protobuf tools
go install github.com/bufbuild/buf/cmd/buf@v1.7.0

# protoc
PB_REL="https://github.com/protocolbuffers/protobuf/releases"
PROTOC_VERSION=3.15.8
curl -LO $PB_REL/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip
unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d $HOME/.local

# neovim
{{ if (eq .chezmoi.os "linux") }}
curl -L -o /tmp/nvim.deb https://github.com/neovim/neovim/releases/download/v0.7.2/nvim-linux64.deb
sudo apt install /tmp/nvim.deb

# AWS
#saml2aws
CURRENT_VERSION=$(curl -Ls https://api.github.com/repos/Versent/saml2aws/releases/latest | grep 'tag_name' | cut -d'v' -f2 | cut -d'"' -f1)
wget -c https://github.com/Versent/saml2aws/releases/download/v${CURRENT_VERSION}/saml2aws_${CURRENT_VERSION}_linux_amd64.tar.gz -O - | tar -xzv -C ~/.local/bin
chmod u+x ~/.local/bin/saml2aws
hash -r
saml2aws --version

# Install Nerd font
mkdir ~/.fonts
curl --output /tmp/fonts.zip -L https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/Hack.zip

unzip /tmp/fonts.zip -d ~/.fonts/ 
fc-cache -fv

# Docker
curl -fsSL https://get.docker.com -o get-docker.sh
$SUDO sh get-docker.sh
{{ end }}

